---
import { useTranslation } from '@i18n/useTranslation';
import type { LocaleCode } from '@i18n/utils';
import { PartBreakType } from '@constants';
import type { PartsType } from '@content/config';

interface Props {
  data?: PartsType['parameter']['partDataList'];
  locale: LocaleCode;
}

const { data, locale } = Astro.props;
if (!data) return;

const t = useTranslation(locale);
const breakableParts = data.filter(
  (obj) => obj.partBreakData.partBreakType != PartBreakType.UNBREAKABLE
);

const extraTextMap: Record<number, string> = {
  [PartBreakType.BLUNT_ONLY]: 'Common/BLUNT_ONLY',
  [PartBreakType.CUT]: 'Common/SEVER_ONLY',
};
---

<div>
  <div>{t('Common/BREAKABLE_PARTS')}</div>
  <ul class="flex flex-col gap-1">
    {
      breakableParts.map((obj) => {
        const extraText = t(extraTextMap[obj.partBreakData.partBreakType]);

        return (
          <li class="flex items-center gap-2">
            <p>{t(['EnemyPart', obj.localizeKey])}</p>
            {!!extraText && <p class="text-xs text-gray-400">{extraText}</p>}
          </li>
        );
      })
    }
  </ul>
</div>
