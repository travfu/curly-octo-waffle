---
interface Props {
  size?: string;
  id?: string;
  class?: string;
}

const { size = '28px', id, class: className } = Astro.props;
---

<button type="button" id={id} class={className}>
  <svg
    class="burger rotate"
    viewBox="0 0 100 100"
    height={size}
    onclick="this.classList.toggle('active')"
  >
    <path
      class="line top"
      d="m 30,33 h 40 c 3.722839,0 7.5,3.126468 7.5,8.578427 0,5.451959 -2.727029,8.421573 -7.5,8.421573 h -20"
    ></path>
    <path class="line middle" d="m 30,50 h 40"></path>
    <path
      class="line bottom"
      d="m 70,67 h -40 c 0,0 -7.5,-0.802118 -7.5,-8.365747 0,-7.563629 7.5,-8.634253 7.5,-8.634253 h 20"
    ></path>
  </svg>

  <style>
    .burger {
      cursor: pointer;
      -webkit-tap-highlight-color: transparent;
      transition: transform 400ms;
      -moz-user-select: none;
      -webkit-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }
    .burger.rotate.active {
      transform: rotate(45deg);
    }
    .line {
      fill: none;
      transition:
        stroke-dasharray 400ms,
        stroke-dashoffset 400ms;
      stroke-width: 7;
      stroke-linecap: round;
      @apply stroke-gray-200;
    }
    .burger .top {
      stroke-dasharray: 40 160;
    }
    .burger .middle {
      stroke-dasharray: 40 142;
      transform-origin: 50%;
      transition: transform 400ms;
    }
    .burger .bottom {
      stroke-dasharray: 40 85;
      transform-origin: 50%;
      transition:
        transform 400ms,
        stroke-dashoffset 400ms;
    }
    .burger.active .top {
      stroke-dashoffset: -64px;
    }
    .burger.active .middle {
      transform: rotate(90deg);
    }
    .burger.active .bottom {
      stroke-dashoffset: -64px;
    }
  </style>
</button>
